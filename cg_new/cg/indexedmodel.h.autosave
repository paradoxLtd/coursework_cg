#ifndef INDEXEDMODEL_H
#define INDEXEDMODEL_H

#include <vector>
#include "vector4f.h"

class IndexedModel
{
public:
    IndexedModel() : m_normals({Vector4f(0,0,0,1),
                                Vector4f(0,0,0,1),
                                Vector4f(0,0,0,1)})
    {};

    void calcNormals();
    void calcTangents();

    std::vector <Vector4f> GetPositions();
    std::vector <Vector4f> GetTexCoords();
    std::vector <Vector4f> GetNormals();
    std::vector <Vector4f> GetTangents();
    std::vector <int> GetIndices();
    
    void PushPositions(Vector4f vector);
    void PushTexCoords(Vector4f vector);
    void PushNormals(Vector4f vector);
    void PushTangents(Vector4f vector);
    void PushIndices(int vector);
    
    void SetPositions(std::vector <Vector4f> vector);
    void SetTexCoords(std::vector <Vector4f> vector);
    void SetNormals(std::vector <Vector4f> vector);
    void SetTangents(std::vector <Vector4f> vector);
    void SetIndices(std::vector <int> vector);

private:
    std::vector <Vector4f> m_positions;
    std::vector <Vector4f> m_texCoords;
    std::vector <Vector4f> m_normals;
    std::vector <Vector4f> m_tangents;
    std::vector <int> m_indices;

};

#endif // INDEXEDMODEL_H
